---
name: Unit Tests

on:
    push:
        branches:
            - main
            - fix/**
            - feature/**
            - dependabot/**
            - maintenance/**

    pull_request:
        branches:
            - main
            - fix/**
            - feature/**
            - dependabot/**
            - maintenance/**
        types:
            - opened
            - reopened

    schedule:
        - cron: 0 12 * * 6

    workflow_dispatch:

concurrency:
    group: ${{ github.action_path }}-${{ github.ref }}-unit-tests
    cancel-in-progress: false

jobs:
    run-unit-tests:
        strategy:
            fail-fast: false
            matrix:
                os: [ubuntu-latest]
                python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]

        env:
            OS: ${{ matrix.os }}
            PYTHON: ${{ matrix.python-version }}

        runs-on: ${{ matrix.os }} # "linux-x64-gpu"

        steps:
            - name: Checkout code
              uses: actions/checkout@v3.6.0
              with:
                  # Whether to checkout submodules: `true` to checkout submodules or `recursive` to
                  # recursively checkout submodules. Default: false
                  submodules: "recursive"

            - name: Set up Python ${{ matrix.python-version }}
              uses: actions/setup-python@v4.7.0
              with:
                  python-version: ${{ matrix.python-version }}
                  architecture: "x64"

            - name: Install SSH key
              uses: shimataro/ssh-key-action@v2
              with:
                  key: ${{ secrets.SSH_HOST_KEY }}
                  name: id_rsa
                  known_hosts: ${{ secrets.SSH_KNOWN_HOSTS }}

            - name: Copy Shiftshader
              run: |
                  mkdir $(pwd)/shiftshader
                  scp -v -P ${{ secrets.SSH_PORT }} "${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }}:~/resources/ubuntu-latest/shiftshader/libvk_swiftshader.so" "$(pwd)/shiftshader/libvk_swiftshader.so"
                  scp -v -P ${{ secrets.SSH_PORT }} "${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }}:~/resources/ubuntu-latest/shiftshader/libvulkan.so.1" "$(pwd)/shiftshader/libvulkan.so.1"
                  scp -v -P ${{ secrets.SSH_PORT }} "${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }}:~/resources/ubuntu-latest/shiftshader/vk_swiftshader_icd.json" "$(pwd)/shiftshader/vk_swiftshader_icd.json"
                  ls -la
                  ls -la shiftshader

            - name: Set up Vulkan SDK
              uses: humbletim/setup-vulkan-sdk@v1.2.0
              with:
                  vulkan-query-version: "1.3.268.0"
                  vulkan-components: Vulkan-Headers, Vulkan-Loader

            - name: Install Poetry
              run: pip install poetry==1.6.1

            - name: Install dependencies
              run: poetry install --no-cache --sync

            - name: C++ build all
              run: |
                  poetry build
                  poetry run poe cpp-build-all

            - name: "Debug: display list of build results from `dist/`"
              if: failure()
              run: |
                  echo "dist/*.*"
                  poetry run python -c "from pathlib import Path;print('\n'.join(s.as_posix() for s in (Path.cwd() / 'dist').rglob('*.*')))"
                  echo "build/*.*"
                  poetry run python -c "from pathlib import Path;print('\n'.join(s.as_posix() for s in (Path.cwd() / 'build').rglob('*.*')))"

            - name: Run unit tests
              run: |
                  export VK_ICD_FILENAMES="$(pwd)/shiftshader/vk_swiftshader_icd.json"
                  export LD_LIBRARY_PATH="$(pwd)/shiftshader"
                  pwd
                  ls -la "$(pwd)/shiftshader/"
                  ls -la "$(pwd)/"
                  poetry run poe run-unit-tests

            - name: Upload built wheel and sdist
              uses: actions/upload-artifact@v3
              with:
                  name: |
                      build-${{ github.sha }}-${{ matrix.os }}-${{ matrix.python-version }}
                  path: |
                      ${{ github.workspace }}/dist/*.whl
                  if-no-files-found: "ignore"
